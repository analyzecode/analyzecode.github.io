[
    {
        "programName": "Write a java method to find the smallest number amoung three numbers.",
        "code": "<span class='colorGreen'>// Write a java method to find the smallest number amoung three numbers.</span>\nclass program1{\n    public static void main(String[] args) {\n        int num1 = 3;\n        int num2 = 17;\n        int num3 = 5;\n\n        int smallest = findSmallestNumber(num1, num2, num3);\n\n        System.out.println(\"The smallest number is: \" + smallest);\n    }\n\n    public static int findSmallestNumber(int num1, int num2, int num3) {\n        int smallest = num1;\n\n        if (num2 < smallest) {\n            smallest = num2;\n        }\n\n        if (num3 < smallest) {\n            smallest = num3;\n        }\n\n        return smallest;\n    }\n}\n",
        "output": "The smallest number is: 3"
    },
    {
        "programName": "Write a Java method to compute the average of three numbers.",
        "code": "<span class='colorGreen'>// Write a Java method to compute the average of three numbers.</span>\npublic class program2 {\n     static double computeAverage(double num1, double num2, double num3) {\n        return (num1 + num2 + num3) / 3.0;\n    }\n\n    public static void main(String[] args) {\n        double number1 = 10.0;\n        double number2 = 5.0;\n        double number3 = 8.0;\n\n        double average = computeAverage(number1, number2, number3);\n\n        System.out.println(\"The average is: \" + average);\n    }\n}\n",
        "output": "The average is: 7.666666666666667"
    },
    {
        "programName": "Write a Java method to display the middle character of a string. Note: a) If the length of the string is odd there will be two middle characters. b) If the length of the string is even there will be one middle character.",
        "code": "<span class='colorGreen'>// Write a Java method to display the middle character of a string. Note: a) If the length of the string is odd there will be two middle characters. b) If the length of the string is even there will be one middle character.</span>\nimport java.util.Scanner;\n\n  class program3 {\n  public static void main(String[] args)\n    {\n        Scanner in = new Scanner(System.in);\n        System.out.print(\"Input a string: \");\n        String str = in.nextLine();\n        System.out.print(\"The middle character in the string: \" + middle(str)+\"\n\");\n    }\n public static String middle(String str)\n    {\n        int position;\n        int length;\n        if (str.length() % 2 == 0)\n        {\n            position = str.length() / 2 - 1;\n            length = 2;\n        }\n        else\n        {\n            position = str.length() / 2;\n            length = 1;\n        }\n        return str.substring(position, position + length);\n    }\n}        ",
        "output": "Input a string: aryan\n        The middle character in the string: y"
    },
    {
        "programName": "Write a Java method to count all the words in a string.",
        "code": "<span class='colorGreen'>// Write a Java method to count all the words in a string.</span>\nclass a\n{\nstatic int countWord(String s)\n{\nint t=1;\nfor(int i=0; i<s.length(); i++)\n{\n\nif((s.charAt(i) == ' ') && (s.charAt(i+1) != ' '))\n{\nt++;\n}\n}\nreturn t;\n}\n\npublic static void main(String args[])\n{\n\nSystem.out.println(countWord(\"Hello How are you\"));\n}\n\n}",
        "output": "4"
    },
    {
        "programName": "Write a Java method to compute the future investment value at a given interest rate for a specified number of years.",
        "code": "<span class='colorGreen'>// Write a Java method to compute the future investment value at a given interest rate for a specified number of years.</span>\nimport java.util.Scanner;\npublic class program3 {\nScanner scanner = new Scanner(System.in);\n// Get user input\nSystem.out.print(\"Enter the principal amount (initial investment): \");\ndouble principal = scanner.nextDouble();\nSystem.out.print(\"Enter the annual interest rate (as a decimal): \");\ndouble annualInterestRate = scanner.nextDouble();\nSystem.out.print(\"Enter the number of years: \");\nint numberOfYears = scanner.nextInt();\n// Calculate and display the future investment value\ndouble futureValue = calculateFutureValue(principal, annualInterestRate, numberOfYears);\nSystem.out.println(\"Future Investment Value: $\" + futureValue);\n// Close the scanner\nscanner.close();\n}\n/**\n * Calculates the future investment value.\n *\n * @param principal           the principal amount (initial investment)\n * @param annualInterestRate the annual interest rate (as a decimal)\n * @param numberOfYears       the number of years\n * @return the future investment value\n */\npublic static double calculateFutureValue(double principal, double annualInterestRate, int numberOfYears) {\n// Convert annual interest rate to monthly interest rate\ndouble monthlyInterestRate = annualInterestRate / 12.0;\n// Calculate the future investment value using the compound interest formula\ndouble futureValue = principal * Math.pow(1 + monthlyInterestRate, numberOfYears * 12);\n// Round the result to two decimal places\nreturn Math.round(futureValue * 100.0) / 100.0;\n}\n}\n",
        "output": "Enter the principal amount (initial investment): 500\n        Enter the annual interest rate (as a decimal): 1.4\n        Enter the number of years: 3\n        Future Investment Value: $26559.38"
    },
    {
        "programName": "Write a Java method to print characters between two characters (i.e. A to P).",
        "code": "<span class='colorGreen'>// Write a Java method to print characters between two characters (i.e. A to P).</span>\nclass program3 {\nstatic void printCharactersBetween(char startChar, char endChar) {\nif (startChar > endChar) {\nchar temp = startChar;\nstartChar = endChar;\nendChar = temp;\n}\n\nfor (char ch = startChar; ch < endChar; ch++) {\nSystem.out.print(ch + \" \");\n}\nSystem.out.println(endChar); \n    }\n\n    public static void main(String[] args) {\nchar startChar = 'A';\n        char endChar = 'F';\n\n        System.out.println(\"Characters between \" + startChar + \" and \" + endChar + \":\");\n        printCharactersBetween(startChar, endChar);\n}\n}        ",
        "output": "Characters between A and F:\n        A B C D E F"
    },
    {
        "programName": "Write a Java method to check whether a string is a valid password.",
        "code": "<span class='colorGreen'>// Write a Java method to check whether a string is a valid password.</span>\nimport java.util.Scanner;\n\nclass program3 {\n    \npublic static final int PASSWORD_LENGTH = 8;\n\npublic static void main(String[] args) {\n\n        Scanner input = new Scanner(System.in);\n        System.out.print(\n                \"1. A password must have at least eight characters.\n\" +\n                \"2. A password consists of only letters and digits.\n\" +\n                \"3. A password must contain at least two digits \n\" +\n                \"Input a password (You are agreeing to the above Terms and Conditions.): \");\n        String s = input.nextLine();\n\n        if (is_Valid_Password(s)) {\n            System.out.println(\"Password is valid: \" + s);\n        } else {\n            System.out.println(\"Not a valid password: \" + s);\n        }\n\n    }\n\n    public static boolean is_Valid_Password(String password) {\n\n        if (password.length() < PASSWORD_LENGTH) return false;\n\n        int charCount = 0;\n        int numCount = 0;\n        for (int i = 0; i < password.length(); i++) {\n\n            char ch = password.charAt(i);\n\n            if (is_Numeric(ch)) numCount++;\n            else if (is_Letter(ch)) charCount++;\n            else return false;\n        }\n\n\n        return (charCount >= 2 && numCount >= 2);\n    }\n\n    public static boolean is_Letter(char ch) {\n        ch = Character.toUpperCase(ch);\n        return (ch >= 'A' && ch <= 'Z');\n    }\n\n\n    public static boolean is_Numeric(char ch) {\n\n        return (ch >= '0' && ch <= '9');\n    }\n}\n",
        "output": "1. A password must have at least eight characters.\n        2. A password consists of only letters and digits.\n        3. A password must contain at least two digits\n        Input a password (You are agreeing to the above Terms and Conditions.): aryanA12\n        Password is valid: aryanA12"
    },
    {
        "programName": "Write a Java method to display the current date and time.",
        "code": "<span class='colorGreen'>// Write a Java method to display the current date and time.</span>\nimport java.time.LocalDateTime;\nimport java.time.format.DateTimeFormatter;\n\npublic class DateTimeExample {\n\n    public static void main(String[] args) {\n        // Call the method to display the current date and time\n        displayCurrentDateTime();\n    }\n\n    /**\n     * Displays the current date and time.\n     */\n    public static void displayCurrentDateTime() {\n        // Get the current date and time\n        LocalDateTime currentDateTime = LocalDateTime.now();\n\n        // Define a custom date-time format (optional)\n        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");\n\n        // Format the current date and time using the defined format\n        String formattedDateTime = currentDateTime.format(formatter);\n\n        // Display the formatted date and time\n        System.out.println(\"Current Date and Time: \" + formattedDateTime);\n    }\n}\n",
        "output": "Current Date and Time: 2023-11-18 15:26:10"
    },
    {
        "programName": "Write a Java method to find all twin prime numbers less than 100.",
        "code": "<span class='colorGreen'>// Write a Java method to find all twin prime numbers less than 100.</span>\nclass program3 {\n    public static void main(String[] args) {\n        findTwinPrimes(100);\n    }\n\n    \n    private static boolean isPrime(int num) {\n        if (num < 2) {\n            return false;\n        }\n        for (int i = 2; i <= Math.sqrt(num); i++) {\n            if (num % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    \n    private static void findTwinPrimes(int limit) {\n        System.out.println(\"Twin Prime Numbers less than \" + limit + \":\");\n        for (int i = 3; i < limit; i++) {\n            if (isPrime(i) && isPrime(i + 2)) {\n                System.out.println(\"(\" + i + \", \" + (i + 2) + \")\");\n            }\n        }\n    }\n}",
        "output": "Twin Prime Numbers less than 100:\n        (3, 5)\n        (5, 7)\n        (11, 13)\n        (17, 19)\n        (29, 31)\n        (41, 43)\n        (59, 61)\n        (71, 73)"
    },
    {
        "programName": "Write a Java method to count the number of digits in an integer with the value 2. The integer may be assumed to be non-negative.",
        "code": "<span class='colorGreen'>// Write a Java method to count the number of digits in an integer with the value 2. The integer may be assumed to be non-negative.</span>\npublic class program3 {\n    public static int countTwos(int number) {\n        String numberStr = String.valueOf(number);\n        int count = 0;\n\n        for (int i = 0; i < numberStr.length(); i++) {\n            if (numberStr.charAt(i) == '2') {\n                count++;\n            }\n        }\n\n        return count;\n    }\n\n    public static void main(String[] args) {\n        int number = 22253;\n        int numberOfTwos = countTwos(number);\n\n        System.out.println(\"The number of 2s in \" + number + \" is: \" + numberOfTwos);\n    }\n}",
        "output": "The number of 2s in 22253 is: 3"
    },
    {
        "programName": "Write a Java method that accepts three integers and checks whether they are consecutive or not. Returns true or false.",
        "code": "<span class='colorGreen'>// Write a Java method that accepts three integers and checks whether they are consecutive or not. Returns true or false.</span>\nimport java.util.Scanner;\n class program3 { \n public static void main(String s[] )\n    {\n        Scanner in = new Scanner(System.in);\n        System.out.print(\"Input the first number: \");\n        int x = in.nextInt();\n        System.out.print(\"Input the second number: \");\n        int y = in.nextInt();\n        System.out.print(\"Input the third number: \");\n        int z = in.nextInt();\n        System.out.print(\"The three given numbers are consecutive(true or false) : \") ;\n        System.out.println(test(x,y,z));\n        }\n\n public static boolean test(int x, int y, int z){\n    int max_num = Math.max(x, Math.max(y, z));\n    int min_num = Math.min(x, Math.min(y, z));\n    int middle_num = x+y+z - max_num - min_num;\n    return (max_num - middle_num) == 1 && (middle_num - min_num == 1);\n  }\n} ",
        "output": "Input the first number: 4\n        Input the second number: 6\n        Input the third number: 5\n        The three given numbers are consecutive(true or false) : true"
    },
    {
        "programName": "Write a Java method that accepts three integers and returns true if one is the middle point between the other two integers, otherwise false",
        "code": "<span class='colorGreen'>// Write a Java method that accepts three integers and returns true if one is the middle point between the other two integers, otherwise false</span>\npublic class program3 {\n\n    public static void main(String[] args) {\n        // Example usage\n        int num1 = 3, num2 = 6, num3 = 9;\n        boolean result = isMiddlePoint(num1, num2, num3);\n        System.out.println(\"Is \" + num2 + \" the middle point? \" + result);\n    }\n\n    /**\n     * Checks if one integer is the middle point between the other two integers.\n     *\n     * @param num1 the first integer\n     * @param num2 the second integer (potential middle point)\n     * @param num3 the third integer\n     * @return true if num2 is the middle point, false otherwise\n     */\n    public static boolean isMiddlePoint(int num1, int num2, int num3) {\n        // Check if num2 is the middle point between num1 and num3\n        return (num1 <= num2 && num2 <= num3) || (num3 <= num2 && num2 <= num1);\n    }\n}",
        "output": "Is 6 the middle point? true"
    },
    {
        "programName": "Write a Java method that checks whether all the characters in a given string are vowels (a, e,i,o,u) or not. Return true if each character in the string is a vowel, otherwise return false.",
        "code": "<span class='colorGreen'>// Write a Java method that checks whether all the characters in a given string are vowels (a, e,i,o,u) or not. Return true if each character in the string is a vowel, otherwise return false.</span>\npublic class program3 {\n\n    public static void main(String[] args) {\n        // Example usage\n        String inputString = \"aeiou\";\n        boolean result = areAllCharactersVowels(inputString);\n        System.out.println(\"Are all characters vowels? \" + result);\n    }\n\n    /**\n     * Checks whether all characters in the given string are vowels.\n     *\n     * @param inputString the input string to check\n     * @return true if all characters are vowels, false otherwise\n     */\n    public static boolean areAllCharactersVowels(String inputString) {\n        // Convert the string to lowercase for case-insensitive comparison\n        String lowercaseString = inputString.toLowerCase();\n\n        // Iterate through each character in the string\n        for (int i = 0; i < lowercaseString.length(); i++) {\n            char currentChar = lowercaseString.charAt(i);\n\n            // Check if the character is not a vowel\n            if (currentChar != 'a' && currentChar != 'e' && currentChar != 'i' &&\n                currentChar != 'o' && currentChar != 'u') {\n                return false; // If any non-vowel character is found, return false\n            }\n        }\n\n        // If the loop completes without returning false, all characters are vowels\n        return true;\n    }\n}",
        "output": "Are all characters vowels? true"
    }
]