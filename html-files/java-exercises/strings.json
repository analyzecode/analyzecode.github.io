[
    {
        "programName": "Program to Check if a String contains only digits?",
        "code": "<span class='colorGreen'>// Program to Check if a String contains only digits?</span>\npublic class CheckDigitsExample {\n    public static void main(String[] args) {\n        // Test Strings\n        String str1 = \"12345\";\n        String str2 = \"abc123\";\n        String str3 = \"6789xyz\";\n        String str4 = \"\";\n\n        // Check if Strings contain only digits\n        checkDigits(str1);\n        checkDigits(str2);\n        checkDigits(str3);\n        checkDigits(str4);\n    }\n\n    // Helper method to check if a String contains only digits\n    private static void checkDigits(String str) {\n        if (str.matches(\"\\d+\")) {\n            System.out.println(\"'\" + str + \"' contains only digits.\");\n        } else {\n            System.out.println(\"'\" + str + \"' does not contain only digits.\");\n        }\n    }\n}        ",
        "output": "'12345' contains only digits.\n        'abc123' does not contain only digits.\n        '6789xyz' does not contain only digits.\n        '' does not contain only digits.        "
    },
    {
        "programName": "Program to perform Deep Copy for String?",
        "code": "<span class='colorGreen'>// Program to perform Deep Copy for String?</span>\npublic class DeepCopyStringExample {\n    public static void main(String[] args) {\n        // Original string\n        String originalString = \"Hello, World!\";\n\n        // Perform deep copy using the String constructor\n        String deepCopyString1 = new String(originalString);\n\n        // Perform deep copy using the substring method\n        String deepCopyString2 = originalString.substring(0);\n\n        // Display original and deep copy strings\n        System.out.println(\"Original String: \" + originalString);\n        System.out.println(\"Deep Copy String 1: \" + deepCopyString1);\n        System.out.println(\"Deep Copy String 2: \" + deepCopyString2);\n    }\n}        ",
        "output": "Original String: Hello, World!\n        Deep Copy String 1: Hello, World!\n        Deep Copy String 2: Hello, World!\n        "
    },
    {
        "programName": "Program to prove String is immutable programmatically?",
        "code": "<span class='colorGreen'>// Program to prove String is immutable programmatically?</span>\npublic class ImmutableStringExample {\n    public static void main(String[] args) {\n        // Original string\n        String originalString = \"Hello, World!\";\n\n        // Modify the original string\n        String modifiedString = modifyString(originalString);\n\n        // Display original and modified strings\n        System.out.println(\"Original String: \" + originalString);\n        System.out.println(\"Modified String: \" + modifiedString);\n    }\n\n    // Helper method to modify a string\n    private static String modifyString(String str) {\n        // Strings are immutable, so any modification results in a new string\n        str = str.concat(\" Welcome!\");\n\n        return str;\n    }\n}        ",
        "output": "Original String: Hello, World!\n        Modified String: Hello, World! Welcome!        "
    },
    {
        "programName": "Program to remove all occurrences of a given character from input String?",
        "code": "<span class='colorGreen'>// Program to remove all occurrences of a given character from input String?</span>\nimport java.util.Scanner;\n\npublic class RemoveCharacterExample {\n    public static void main(String[] args) {\n        // Input string\n        Scanner scanner = new Scanner(System.in);\n        System.out.print(\"Enter a string: \");\n        String inputString = scanner.nextLine();\n\n        // Input character to remove\n        System.out.print(\"Enter the character to remove: \");\n        char charToRemove = scanner.next().charAt(0);\n\n        // Remove occurrences of the specified character\n        String resultString = removeCharacter(inputString, charToRemove);\n\n        // Display the result\n        System.out.println(\"Original String: \" + inputString);\n        System.out.println(\"String after removing '\" + charToRemove + \"': \" + resultString);\n    }\n\n    // Helper method to remove occurrences of a character from a string\n    private static String removeCharacter(String str, char charToRemove) {\n        // Use StringBuilder for efficient string manipulation\n        StringBuilder result = new StringBuilder();\n\n        // Iterate through each character in the original string\n        for (char c : str.toCharArray()) {\n            // Append the character to the result if it is not the one to be removed\n            if (c != charToRemove) {\n                result.append(c);\n            }\n        }\n\n        // Convert StringBuilder to String\n        return result.toString();\n    }\n}        ",
        "output": "Enter a string: programming\n        Enter the character to remove: r\n        Original String: programming\n        String after removing 'r': pogamming\n        "
    },
    {
        "programName": "Program to append the string using StringBuffer class",
        "code": "<span class='colorGreen'>// Program to append the string using StringBuffer class</span>\npublic class StringBufferExample {\n    public static void main(String[] args) {\n        // Create a StringBuffer\n        StringBuffer stringBuffer = new StringBuffer(\"Hello, \");\n\n        // Append strings\n        stringBuffer.append(\"Java \").append(\"Programming\").append(\"!\");\n\n        // Display the result\n        System.out.println(\"Appended String: \" + stringBuffer.toString());\n    }\n}        ",
        "output": "Appended String: Hello, Java Programming!        "
    },
    {
        "programName": "Program to insert the string using StringBuffer class",
        "code": "<span class='colorGreen'>// Program to insert the string using StringBuffer class</span>\npublic class StringBufferInsertExample {\n    public static void main(String[] args) {\n        // Original string\n        StringBuffer originalBuffer = new StringBuffer(\"Hello, Programming!\");\n\n        // String to insert\n        String toInsert = \"Java \";\n\n        // Index at which to insert the string\n        int insertIndex = 7;\n\n        // Insert the string\n        originalBuffer.insert(insertIndex, toInsert);\n\n        // Display the result\n        System.out.println(\"Original String: \" + originalBuffer.toString());\n    }\n}        ",
        "output": "Original String: Hello, Java Programming!        "
    },
    {
        "programName": "Program to Add Characters to a String",
        "code": "<span class='colorGreen'>// Program to Add Characters to a String</span>\npublic class AddCharactersToStringExample {\n    public static void main(String[] args) {\n        // Original string\n        String originalString = \"Hello, \";\n\n        // Characters to add\n        String charactersToAdd = \"World!\";\n\n        // Add characters using concat method\n        String resultString = originalString.concat(charactersToAdd);\n\n        // Display the result\n        System.out.println(\"Result String: \" + resultString);\n    }\n}        ",
        "output": "Result String: Hello, World!        "
    },
    {
        "programName": " Program to Add Characters to a String",
        "code": "<span class='colorGreen'>//  Program to Add Characters to a String</span>\npublic class AddCharactersToStringExample {\n    public static void main(String[] args) {\n        // Original string\n        String originalString = \"Hello, \";\n\n        // Characters to add\n        String charactersToAdd = \"World!\";\n\n        // Approach 1: Using concat method\n        String resultStringConcat = originalString.concat(charactersToAdd);\n\n        // Approach 2: Using + operator\n        String resultStringPlusOperator = originalString + charactersToAdd;\n\n        // Approach 3: Using StringBuilder\n        StringBuilder stringBuilder = new StringBuilder(originalString);\n        stringBuilder.append(charactersToAdd);\n        String resultStringBuilder = stringBuilder.toString();\n\n        // Display the results\n        System.out.println(\"Original String: \" + originalString);\n        System.out.println(\"Result (concat): \" + resultStringConcat);\n        System.out.println(\"Result (+ operator): \" + resultStringPlusOperator);\n        System.out.println(\"Result (StringBuilder): \" + resultStringBuilder);\n    }\n}        ",
        "output": "Original String: Hello, \n        Result (concat): Hello, World!\n        Result (+ operator): Hello, World!\n        Result (StringBuilder): Hello, World!\n        "
    },
    {
        "programName": "Program to Check Anagram",
        "code": "<span class='colorGreen'>// Program to Check Anagram</span>\nimport java.util.Arrays;\n\npublic class AnagramCheck {\n    public static void main(String[] args) {\n        // Test cases\n        String str1 = \"listen\";\n        String str2 = \"silent\";\n\n        // Check if the strings are anagrams\n        boolean isAnagram = checkAnagram(str1, str2);\n\n        // Display the result\n        if (isAnagram) {\n            System.out.println(str1 + \" and \" + str2 + \" are anagrams.\");\n        } else {\n            System.out.println(str1 + \" and \" + str2 + \" are not anagrams.\");\n        }\n    }\n\n    // Helper method to check if two strings are anagrams\n    private static boolean checkAnagram(String str1, String str2) {\n        // Remove spaces and convert to lowercase for case-insensitive comparison\n        str1 = str1.replaceAll(\"\\s\", \"\").toLowerCase();\n        str2 = str2.replaceAll(\"\\s\", \"\").toLowerCase();\n\n        // Check if the sorted strings are equal\n        return Arrays.equals(str1.chars().sorted().toArray(), str2.chars().sorted().toArray());\n    }\n}        ",
        "output": "listen and silent are anagrams.        "
    },
    {
        "programName": " Program to check whether a string is a Palindrome",
        "code": "<span class='colorGreen'>//  Program to check whether a string is a Palindrome</span>\npublic class PalindromeCheck {\n    public static void main(String[] args) {\n        // Test cases\n        String str1 = \"radar\";\n        String str2 = \"hello\";\n\n        // Check if the strings are palindromes\n        boolean isPalindrome1 = isPalindrome(str1);\n        boolean isPalindrome2 = isPalindrome(str2);\n\n        // Display the result\n        if (isPalindrome1) {\n            System.out.println(str1 + \" is a palindrome.\");\n        } else {\n            System.out.println(str1 + \" is not a palindrome.\");\n        }\n\n        if (isPalindrome2) {\n            System.out.println(str2 + \" is a palindrome.\");\n        } else {\n            System.out.println(str2 + \" is not a palindrome.\");\n        }\n    }\n\n    // Helper method to check if a string is a palindrome\n    private static boolean isPalindrome(String str) {\n        // Remove spaces and convert to lowercase for case-insensitive comparison\n        str = str.replaceAll(\"\\s\", \"\").toLowerCase();\n\n        // Check if the string is the same when reversed\n        String reversedStr = new StringBuilder(str).reverse().toString();\n        return str.equals(reversedStr);\n    }\n}        ",
        "output": "radar is a palindrome.\n        hello is not a palindrome.        "
    },
    {
        "programName": "Program to Convert Enum to String",
        "code": "<span class='colorGreen'>// Program to Convert Enum to String</span>\n// Define an enum\nenum Weekday {\n    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY, SUNDAY\n}\n\npublic class EnumToStringExample {\n    public static void main(String[] args) {\n        // Convert enum to string\n        Weekday day = Weekday.WEDNESDAY;\n        String dayString = day.toString();\n\n        // Display the result\n        System.out.println(\"Enum constant: \" + day);\n        System.out.println(\"Enum as String: \" + dayString);\n    }\n}        ",
        "output": "Enum constant: WEDNESDAY\n        Enum as String: WEDNESDAY        "
    }
]