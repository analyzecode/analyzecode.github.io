[

    {
       
        "programName": "Program to copy all elements of one array into another array",
        "code": "<span class='colorGreen'>// Program to copy all elements of one array into another array</span>\npublic class ArrayCopyExample {\n    public static void main(String[] args) {\n        // Original array\n        int[] originalArray = {1, 2, 3, 4, 5};\n\n        // Create a new array with the same length as the original array\n        int[] copiedArray = new int[originalArray.length];\n\n        // Copy elements from the original array to the new array\n        for (int i = 0; i < originalArray.length; i++) {\n            copiedArray[i] = originalArray[i];\n        }\n\n        // Display original and copied arrays\n        System.out.println(\"Original Array: \" + arrayToString(originalArray));\n        System.out.println(\"Copied Array:   \" + arrayToString(copiedArray));\n    }\n\n    // Helper method to convert an array to a string\n    private static String arrayToString(int[] array) {\n        StringBuilder result = new StringBuilder(\"[\");\n        for (int i = 0; i < array.length; i++) {\n            result.append(array[i]);\n            if (i < array.length - 1) {\n                result.append(\", \");\n            }\n        }\n        result.append(\"]\");\n        return result.toString();\n    }\n}        ",
        "output": "Original Array: [1, 2, 3, 4, 5]\n        Copied Array:   [1, 2, 3, 4, 5]"
    },
    {
       
        "programName": " Program to find the frequency of each element in the array",
        "code": "<span class='colorGreen'>//  Program to find the frequency of each element in the array</span>\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class ElementFrequencyExample {\n    public static void main(String[] args) {\n        // Original array\n        int[] array = {1, 2, 3, 2, 4, 1, 5, 4, 2, 5};\n\n        // Map to store the frequency of each element\n        Map<Integer, Integer> frequencyMap = new HashMap<>();\n\n        // Count the frequency of each element\n        for (int element : array) {\n            // If the element is already in the map, increment its count\n            if (frequencyMap.containsKey(element)) {\n                frequencyMap.put(element, frequencyMap.get(element) + 1);\n            } else {\n                // If the element is not in the map, add it with count 1\n                frequencyMap.put(element, 1);\n            }\n        }\n\n        // Display the frequency of each element\n        for (Map.Entry<Integer, Integer> entry : frequencyMap.entrySet()) {\n            System.out.println(\"Element \" + entry.getKey() + \" occurs \" + entry.getValue() + \" times.\");\n        }\n    }\n}        ",
        "output": "Element 1 occurs 2 times.\n        Element 2 occurs 3 times.\n        Element 3 occurs 1 times.\n        Element 4 occurs 2 times.\n        Element 5 occurs 2 times."
    },
    {
       
        "programName": "Program to left rotate the elements of an array",
        "code": "<span class='colorGreen'>// Program to left rotate the elements of an array</span>\npublic class LeftRotateArrayExample {\n    public static void main(String[] args) {\n        // Original array\n        int[] array = {1, 2, 3, 4, 5};\n\n        // Number of positions to rotate left\n        int positions = 2;\n\n        // Perform left rotation\n        leftRotateArray(array, positions);\n\n        // Display the rotated array\n        System.out.println(\"Rotated Array: \" + arrayToString(array));\n    }\n\n    // Helper method to left rotate the array\n    private static void leftRotateArray(int[] array, int positions) {\n        int length = array.length;\n\n        // Handle cases where the number of positions is greater than the array length\n        positions = positions % length;\n\n        // Create a temporary array to store rotated elements\n        int[] tempArray = new int[length];\n\n        // Copy elements to tempArray starting from the rotated positions\n        for (int i = 0; i < length; i++) {\n            tempArray[(i - positions + length) % length] = array[i];\n        }\n\n        // Copy elements from tempArray back to the original array\n        System.arraycopy(tempArray, 0, array, 0, length);\n    }\n\n    // Helper method to convert an array to a string\n    private static String arrayToString(int[] array) {\n        StringBuilder result = new StringBuilder(\"[\");\n        for (int i = 0; i < array.length; i++) {\n            result.append(array[i]);\n            if (i < array.length - 1) {\n                result.append(\", \");\n            }\n        }\n        result.append(\"]\");\n        return result.toString();\n    }\n}        ",
        "output": "Rotated Array: [3, 4, 5, 1, 2]        "
    },
    {
       
        "programName": "Program to print the duplicate elements of an array",
        "code": "<span class='colorGreen'>// Program to print the duplicate elements of an array</span>\nimport java.util.HashMap;\nimport java.util.Map;\n\npublic class DuplicateElementsExample {\n    public static void main(String[] args) {\n        // Original array with duplicates\n        int[] array = {1, 2, 3, 2, 4, 5, 6, 5, 7};\n\n        // Find and print duplicate elements\n        printDuplicateElements(array);\n    }\n\n    // Helper method to find and print duplicate elements\n    private static void printDuplicateElements(int[] array) {\n        // Map to store the frequency of each element\n        Map<Integer, Integer> frequencyMap = new HashMap<>();\n\n        // Count the frequency of each element\n        for (int element : array) {\n            // If the element is already in the map, increment its count\n            if (frequencyMap.containsKey(element)) {\n                frequencyMap.put(element, frequencyMap.get(element) + 1);\n            } else {\n                // If the element is not in the map, add it with count 1\n                frequencyMap.put(element, 1);\n            }\n        }\n\n        // Print duplicate elements\n        System.out.println(\"Duplicate Elements:\");\n\n        for (Map.Entry<Integer, Integer> entry : frequencyMap.entrySet()) {\n            if (entry.getValue() > 1) {\n                System.out.println(entry.getKey());\n            }\n        }\n    }\n}        ",
        "output": "Duplicate Elements:\n        2\n        5\n        "
    },
    {
       
        "programName": "Program to print the elements of an array",
        "code": "<span class='colorGreen'>// Program to print the elements of an array</span>\npublic class PrintArrayExample {\n    public static void main(String[] args) {\n        // Original array\n        int[] array = {1, 2, 3, 4, 5};\n\n        // Print the array\n        System.out.println(\"Elements of the array:\");\n        printArray(array);\n    }\n\n    // Helper method to print an array\n    private static void printArray(int[] arr) {\n        for (int element : arr) {\n            System.out.print(element + \" \");\n        }\n    }\n}        ",
        "output": "Elements of the array:\n        1 2 3 4 5        "
    },
    {
       
        "programName": "Program to print the elements of an array in reverse order",
        "code": "<span class='colorGreen'>// Program to print the elements of an array in reverse order</span>\npublic class ReverseArrayExample {n\n    public static void main(String[] args) {n\n        // Original arrayn\n        int[] array = {1, 2, 3, 4, 5};n\nn\n        // Print original arrayn\n        System.out.println(\"Original Array:\");n\n        printArray(array);n\nn\n        // Print array in reverse ordern\n        System.out.println(\"\nArray in Reverse Order:\");n\n        printReverseArray(array);n\n    }n\nn\n    // Helper method to print an arrayn\n    private static void printArray(int[] arr) {n\n        for (int element : arr) {n\n            System.out.print(element + \" \");n\n        }n\n        System.out.println();n\n    }n\nn\n    // Helper method to print an array in reverse ordern\n    private static void printReverseArray(int[] arr) {n\n        for (int i = arr.length - 1; i >= 0; i--) {n\n            System.out.print(arr[i] + \" \");n\n        }n\n        System.out.println();n\n    }n\n}        ",
        "output": "Original Array:\n        1 2 3 4 5 \n        \n        Array in Reverse Order:\n        5 4 3 2 1 \n        "
    },
    {
       
        "programName": "Program to print the elements of an array present on even position",
        "code": "<span class='colorGreen'>// Program to print the elements of an array present on even position        </span>\npublic class EvenPositionElementsExample {\n    public static void main(String[] args) {\n        // Original array\n        int[] array = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};\n\n        // Print elements at even positions\n        System.out.println(\"Elements at even positions:\");\n        printEvenPositionElements(array);\n    }\n\n    // Helper method to print elements at even positions of an array\n    private static void printEvenPositionElements(int[] arr) {\n        for (int i = 1; i < arr.length; i += 2) {\n            System.out.print(arr[i] + \" \");\n        }\n    }\n}        ",
        "output": "Elements at even positions:\n        2 4 6 8 10"
    }
]